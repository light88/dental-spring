buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
//        classpath 'com.h2database:h2:1.3.170'
        classpath 'org.flywaydb:flyway-gradle-plugin:3.2.1'
    }
}

version "0.2"
group "example"

//apply plugin: "java"
apply plugin: 'war'
apply plugin: 'org.flywaydb.flyway'
apply plugin: 'jetty'

//httpPort=9090

flyway {
    url = 'jdbc:mysql://localhost:3306/dental_dev'
//    url = 'jdbc:h2:file:target/foobar'
    user = 'root'
    password = 'rootpass'
//    user = 'test'
//    password = 'test'
}

repositories {
    mavenLocal()
    mavenCentral()
}

project.allprojects.each {project ->
    println("## : " + project.name + " " + project.version)
}

dependencies {

    compile 'org.springframework:spring-webmvc:4.1.6.RELEASE'
    compile 'org.springframework:spring-web:4.1.6.RELEASE'
    compile 'org.springframework:spring-context-support:4.1.6.RELEASE'
    compile 'org.springframework:spring-context:4.1.6.RELEASE'
    compile 'org.springframework:spring-orm:4.1.6.RELEASE'

    compile 'org.webjars:bootstrap:3.3.4'
    compile 'javax.servlet:javax.servlet-api:3.1.0'

    compile 'org.springframework.security:spring-security-core:4.0.0.RELEASE'
    compile 'org.springframework.security:spring-security-web:4.0.0.RELEASE'
    compile 'org.springframework.security:spring-security-config:4.0.0.RELEASE'
    compile 'org.springframework.security:spring-security-taglibs:4.0.0.RELEASE'

    testCompile 'org.springframework:spring-test:4.1.6.RELEASE'
    //include in compile only, exclude in the war

    compile 'org.hibernate:hibernate-core:4.3.7.Final'
    compile 'mysql:mysql-connector-java:5.1.31'

//    compile 'com.lyncode:jtwig-spring:3.1.1'
    compile 'org.freemarker:freemarker:2.3.21'

//    compile 'log4j:log4j:1.2.17'
    testCompile 'junit:junit:4.9'

//    integrationTestCompile 'org.assertj:assertj-core:3.0.0'

    // add dependencies to project modules
    compile project(':tools')


}

//project.ext.profiles = "/profiles/"
//apply from: "${profiles}${profile}.gradle"

//jettyRunWar.contextPath = 'dental'
war {

    webInf {
        from "${sourceSets.main.resources}/spring/"
        from sourceSets.main.resources ,{
            //exclude('profiles/')
        }
        from "src/main/resources/profiles/localhost"
        //from "${sourceSets.main.resources}${profiles}${profile}"
    }
}

task printpath << {
    println "${sourceSets.main.resources}${profiles}${profile}"
    println "${sourceSets.main.resources}"
}

//sourceSets {
//    integrationTest {
//        java {
//            compileClasspath += main.output + test.output
//            runtimeClasspath += main.output + test.output
//            srcDir file('src/integration-test/java')
//        }
//        resources.srcDir file('src/integration-test/resources')
//    }
//}
//configurations {
//    integrationTestCompile.extendsFrom testCompile
//    integrationTestRuntime.extendsFrom testRuntime
//}



//jetty
httpPort = 8080
stopPort = 9080
stopKey = "stopKey"